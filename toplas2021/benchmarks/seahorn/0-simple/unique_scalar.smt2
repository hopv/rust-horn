(set-info :original "0-simple/unique_scalar.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@entry.split ())
(declare-var main@%_0_0 (Array Int Int) )
(declare-var main@%x_0 Int )
(declare-var main@%_1_0 (Array Int Int) )
(declare-var main@%y_0 Int )
(declare-var main@%_2_0 (Array Int Int) )
(declare-var main@%_3_0 (Array Int Int) )
(declare-var main@%_4_0 Int )
(declare-var main@%_5_0 Bool )
(declare-var main@%_6_0 Int )
(declare-var main@%_7_0 (Array Int Int) )
(declare-var main@%_8_0 Int )
(declare-var main@%_9_0 Int )
(declare-var main@%_10_0 (Array Int Int) )
(declare-var main@%_11_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@entry.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (=> (and main@entry
         true
         (> main@%x_0 0)
         (= main@%_1_0 (store main@%_0_0 main@%x_0 0))
         (> main@%y_0 0)
         (= main@%_2_0 (store main@%_1_0 main@%y_0 0))
         (= main@%_3_0 (store main@%_2_0 main@%x_0 0))
         (= main@%_5_0 (= main@%_4_0 0))
         (= main@%_6_0 (ite main@%_5_0 main@%y_0 main@%x_0))
         (= main@%_7_0 (store main@%_3_0 main@%_6_0 1))
         (= main@%_8_0 (select main@%_7_0 main@%x_0))
         (= main@%_9_0 (+ main@%_8_0 1))
         (= main@%_10_0 (store main@%_7_0 main@%x_0 main@%_9_0))
         (= main@%_11_0 (< main@%_8_0 1))
         (not main@%_11_0)
         (=> main@entry.split_0 (and main@entry.split_0 main@entry_0))
         main@entry.split_0)
    main@entry.split))
(query main@entry.split)

