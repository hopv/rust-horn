(set-info :original "01-simple/simple-6-unique_scalar.bc")
(set-info :authors "SeaHorn v.10.0.0-rc0")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@entry.split ())
(declare-var main@%sm5_0 (Array Int Int) )
(declare-var main@%x_0 Int )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@%y_0 Int )
(declare-var main@%sm1_0 (Array Int Int) )
(declare-var main@%sm2_0 (Array Int Int) )
(declare-var main@%_0_0 Int )
(declare-var main@%_1_0 Bool )
(declare-var main@%_2_0 Int )
(declare-var main@%sm3_0 (Array Int Int) )
(declare-var main@%_3_0 Int )
(declare-var main@%_4_0 Int )
(declare-var main@%sm4_0 (Array Int Int) )
(declare-var main@%_5_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@entry.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (=> (and main@entry
         true
         (> main@%x_0 0)
         (= main@%sm_0 (store main@%sm5_0 main@%x_0 0))
         (> main@%y_0 0)
         (= main@%sm1_0 (store main@%sm_0 main@%y_0 0))
         (= main@%sm2_0 (store main@%sm1_0 main@%x_0 0))
         (= main@%_1_0 (= main@%_0_0 0))
         (= main@%_2_0 (ite main@%_1_0 main@%y_0 main@%x_0))
         (= main@%sm3_0 (store main@%sm2_0 main@%_2_0 1))
         (= main@%_3_0 (select main@%sm3_0 main@%x_0))
         (= main@%_4_0 (+ main@%_3_0 1))
         (= main@%sm4_0 (store main@%sm3_0 main@%x_0 main@%_4_0))
         (= main@%_5_0 (< main@%_3_0 1))
         (not main@%_5_0)
         (=> main@entry.split_0 (and main@entry.split_0 main@entry_0))
         main@entry.split_0)
    main@entry.split))
(query main@entry.split)

