(set-info :original "1-bmc/test-bmc-diamond-1.true.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@_bb (Int ))
(declare-rel main@_bb2 (Int ))
(declare-rel main@_bb4 (Int ))
(declare-rel main@.preheader1 (Int ))
(declare-rel main@.preheader (Int ))
(declare-rel main@verifier.error.split ())
(declare-var main@%_23_0 Bool )
(declare-var main@%_21_0 Int )
(declare-var main@%_22_0 Bool )
(declare-var main@%_19_0 Int )
(declare-var main@%_20_0 Bool )
(declare-var main@%_17_0 Int )
(declare-var main@%_18_0 Bool )
(declare-var main@%_12_0 Int )
(declare-var main@%_13_0 Bool )
(declare-var main@%_7_0 Int )
(declare-var main@%_8_0 Bool )
(declare-var main@%_1_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@%_0_0 Int )
(declare-var main@_bb_0 Bool )
(declare-var main@_bb_1 Bool )
(declare-var main@_bb1_0 Bool )
(declare-var main@_bb2_0 Bool )
(declare-var main@_bb2_1 Bool )
(declare-var main@_bb3_0 Bool )
(declare-var main@_bb4_0 Bool )
(declare-var main@_bb4_1 Bool )
(declare-var main@.preheader1.preheader_0 Bool )
(declare-var main@.preheader1_0 Bool )
(declare-var main@.preheader1_1 Bool )
(declare-var main@.preheader.preheader_0 Bool )
(declare-var main@.preheader_0 Bool )
(declare-var main@.preheader_1 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var main@verifier.error.split_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (=> (and main@entry
         true
         (= main@%_1_0 (> main@%_0_0 0))
         main@%_1_0
         (=> main@_bb_0 (and main@_bb_0 main@entry_0))
         main@_bb_0)
    (main@_bb main@%_0_0)))
(rule (=> (and (main@_bb main@%_0_0)
         true
         (= main@%_8_0 (= main@%_7_0 0))
         (=> main@_bb_1 (and main@_bb_1 main@_bb_0))
         main@_bb_1
         (=> (and main@_bb_1 main@_bb_0) (not main@%_8_0)))
    (main@_bb main@%_0_0)))
(rule (=> (and (main@_bb main@%_0_0)
         true
         (= main@%_8_0 (= main@%_7_0 0))
         (=> main@_bb1_0 (and main@_bb1_0 main@_bb_0))
         (=> (and main@_bb1_0 main@_bb_0) main@%_8_0)
         (=> main@_bb2_0 (and main@_bb2_0 main@_bb1_0))
         main@_bb2_0)
    (main@_bb2 main@%_0_0)))
(rule (=> (and (main@_bb2 main@%_0_0)
         true
         (= main@%_13_0 (= main@%_12_0 0))
         (=> main@_bb2_1 (and main@_bb2_1 main@_bb2_0))
         main@_bb2_1
         (=> (and main@_bb2_1 main@_bb2_0) (not main@%_13_0)))
    (main@_bb2 main@%_0_0)))
(rule (=> (and (main@_bb2 main@%_0_0)
         true
         (= main@%_13_0 (= main@%_12_0 0))
         (=> main@_bb3_0 (and main@_bb3_0 main@_bb2_0))
         (=> (and main@_bb3_0 main@_bb2_0) main@%_13_0)
         (=> main@_bb4_0 (and main@_bb4_0 main@_bb3_0))
         main@_bb4_0)
    (main@_bb4 main@%_0_0)))
(rule (=> (and (main@_bb4 main@%_0_0)
         true
         (= main@%_18_0 (= main@%_17_0 0))
         (=> main@_bb4_1 (and main@_bb4_1 main@_bb4_0))
         main@_bb4_1
         (=> (and main@_bb4_1 main@_bb4_0) (not main@%_18_0)))
    (main@_bb4 main@%_0_0)))
(rule (=> (and (main@_bb4 main@%_0_0)
         true
         (= main@%_18_0 (= main@%_17_0 0))
         (=> main@.preheader1.preheader_0
             (and main@.preheader1.preheader_0 main@_bb4_0))
         (=> (and main@.preheader1.preheader_0 main@_bb4_0) main@%_18_0)
         (=> main@.preheader1_0
             (and main@.preheader1_0 main@.preheader1.preheader_0))
         main@.preheader1_0)
    (main@.preheader1 main@%_0_0)))
(rule (=> (and (main@.preheader1 main@%_0_0)
         true
         (= main@%_20_0 (= main@%_19_0 0))
         (=> main@.preheader1_1 (and main@.preheader1_1 main@.preheader1_0))
         main@.preheader1_1
         (=> (and main@.preheader1_1 main@.preheader1_0) (not main@%_20_0)))
    (main@.preheader1 main@%_0_0)))
(rule (=> (and (main@.preheader1 main@%_0_0)
         true
         (= main@%_20_0 (= main@%_19_0 0))
         (=> main@.preheader.preheader_0
             (and main@.preheader.preheader_0 main@.preheader1_0))
         (=> (and main@.preheader.preheader_0 main@.preheader1_0) main@%_20_0)
         (=> main@.preheader_0
             (and main@.preheader_0 main@.preheader.preheader_0))
         main@.preheader_0)
    (main@.preheader main@%_0_0)))
(rule (=> (and (main@.preheader main@%_0_0)
         true
         (= main@%_22_0 (= main@%_21_0 0))
         (=> main@.preheader_1 (and main@.preheader_1 main@.preheader_0))
         main@.preheader_1
         (=> (and main@.preheader_1 main@.preheader_0) (not main@%_22_0)))
    (main@.preheader main@%_0_0)))
(rule (let ((a!1 (and (main@.preheader main@%_0_0)
                true
                (= main@%_22_0 (= main@%_21_0 0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@.preheader_0))
                (=> (and main@verifier.error_0 main@.preheader_0) main@%_22_0)
                (=> main@verifier.error_0 (= main@%_23_0 (> main@%_0_0 (- 1))))
                (=> main@verifier.error_0 (not main@%_23_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!1 main@verifier.error.split)))
(query main@verifier.error.split)

