jayhorn programs/IncMaxSafe.java
[root] - 		 ---   JAYHORN : Static Analyzer for Java Programs ---- 
[root] - 	 Verification : safety
[root] - 	 Solver : eldarica
[root] - Building CFG  ... 
[root] - Safety Verification ... 
[root] - Trying to verify with unbounded heap
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - Prover code Unsat
[root] - Trying to verify with max explicit heap size 10
[root] - ======== Round 1: heap size 1
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 2: heap size 2
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 3: heap size 3
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 4: heap size 4
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - program is bounded, checking full safety ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxSafe: void main(JayArray_java_lang_String)>
[root] - - could not prove safety, giving up
UNKNOWN
jayhorn programs/IncMaxUnsafe.java
[root] - 		 ---   JAYHORN : Static Analyzer for Java Programs ---- 
[root] - 	 Verification : safety
[root] - 	 Solver : eldarica
[root] - Building CFG  ... 
[root] - Safety Verification ... 
[root] - Trying to verify with unbounded heap
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - Prover code Unsat
[root] - Trying to verify with max explicit heap size 10
[root] - ======== Round 1: heap size 1
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 2: heap size 2
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 3: heap size 3
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - insufficient heap, increasing size
[root] - ======== Round 4: heap size 4
[root] - - Searching for counterexamples ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Dropping call to over-approximated <java.util.Random: void <init>(long)>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Dropping call to over-approximated <java.util.Random: int nextInt()>
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - no counterexamples, checking heap bounds ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - program is bounded, checking full safety ...
[root] - Hornify  ... 
[root] - Transform Program Methods into Horn Clauses ... 
[root] - Running from entry point: <IncMaxUnsafe: void main(JayArray_java_lang_String)>
[root] - - could not prove safety, giving up
UNKNOWN
